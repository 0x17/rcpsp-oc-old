\ This file was automatically generated by Zimpl
\ param timeHorizon := 10;
\ set T := { 1 .. timeHorizon };
\ param nRes := 1;
\ set R := { 1 .. nRes };
\ param K[R] := <1> 0.0;
\ param kappa[R] := <1> 1;
\ param zMax[R] := <1> 10;
\ param nJobs := 5;
\ param last := nJobs+1;
\ set J := { 0 .. nJobs+1 };
\ set actual := J without { 0, nJobs+1 };
\ param d[J] := <0> 0, <1> 1, <2> 1, <3> 2, <4> 2, <5> 1, <6> 0;
\ param k[R*J] :=   | 0, 1, 2, 3, 4, 5, 6 |                 |1| 0, 1, 2, 1, 1, 2, 0 |;
\ set edges := {<0, 1>, <1, 2>, <2, 3>, <0, 4>, <4, 5>, <5, 6>, <3, 6>};
\ set L := { "A", "AA", "AAA" };
\ set Lstar := {"A", "AA"};
\ param q[L*T] :=       |  4,  5,  6,  7,  8,  9, 10 |                 |"AAA"| 50, 40, 30, 20, 10,  9,  8 |                 | "
\ AA"| 40, 30, 20, 10,  9,  8,  7 |                 |  "A"| 30, 20, 10,  9,  8,  7,  6 | default 0;
\ defset periodsActive(j, t) := { min(timeHorizon, t) .. min(t+d[j]-1, timeHorizon)};
\ var x[J*T] binary;
\ var z[R*T] integer >= 0;
\ var makespan integer >= 0;
\ minimize costs: makespan     + (sum <r> in R : sum <t> in T : z[r,t] * kappa[r]);
\ subto syncmakespan: makespan == sum <t> in T : t * x[last, t];
\ subto eachjobonce:  forall <j> in J do   (sum <t> in T : x[j,t]) == 1;
\ subto precedence:  forall <i,j> in edges do   (sum <t> in T : t*x[i,t]) <= (sum <t> in T : (t-d[j])*x[j,t]);
\ subto rescapacity:  forall <r> in R do   forall <t> in T do    (sum <j> in actual : k[r, j] * sum <tau> in periodsActive(j, t
\ ) : x[j, tau]) <= K[r] + z[r, t];
\ subto overtimecapacity:  forall <r> in R do   forall <t> in T do    z[r,t] <= zMax[r];
\Problem name: rcpsp-oc.zpl
Minimize
 costs:  + z#1#1 + z#1#2 + z#1#3 + z#1#4 + z#1#5 + z#1#6
  + z#1#7 + z#1#8 + z#1#9 + z#1#10 + makespan
Subject to
 syncmakespan_1:
  -10 x#6#10 -9 x#6#9 -8 x#6#8 -7 x#6#7 -6 x#6#6 -5 x#6#5
  -4 x#6#4 -3 x#6#3 -2 x#6#2 - x#6#1 + makespan = 0
 eachjobonce_1:
  + x#0#10 + x#0#9 + x#0#8 + x#0#7 + x#0#6 + x#0#5
  + x#0#4 + x#0#3 + x#0#2 + x#0#1 = 1
 eachjobonce_2:
  + x#1#10 + x#1#9 + x#1#8 + x#1#7 + x#1#6 + x#1#5
  + x#1#4 + x#1#3 + x#1#2 + x#1#1 = 1
 eachjobonce_3:
  + x#2#10 + x#2#9 + x#2#8 + x#2#7 + x#2#6 + x#2#5
  + x#2#4 + x#2#3 + x#2#2 + x#2#1 = 1
 eachjobonce_4:
  + x#3#10 + x#3#9 + x#3#8 + x#3#7 + x#3#6 + x#3#5
  + x#3#4 + x#3#3 + x#3#2 + x#3#1 = 1
 eachjobonce_5:
  + x#4#10 + x#4#9 + x#4#8 + x#4#7 + x#4#6 + x#4#5
  + x#4#4 + x#4#3 + x#4#2 + x#4#1 = 1
 eachjobonce_6:
  + x#5#10 + x#5#9 + x#5#8 + x#5#7 + x#5#6 + x#5#5
  + x#5#4 + x#5#3 + x#5#2 + x#5#1 = 1
 eachjobonce_7:
  + x#6#10 + x#6#9 + x#6#8 + x#6#7 + x#6#6 + x#6#5
  + x#6#4 + x#6#3 + x#6#2 + x#6#1 = 1
 precedence_1:
  -9 x#1#10 -8 x#1#9 -7 x#1#8 -6 x#1#7 -5 x#1#6 -4 x#1#5
  -3 x#1#4 -2 x#1#3 - x#1#2 +10 x#0#10 +9 x#0#9 +8 x#0#8
  +7 x#0#7 +6 x#0#6 +5 x#0#5 +4 x#0#4 +3 x#0#3 +2 x#0#2
  + x#0#1 <= 0
 precedence_2:
  -8 x#4#10 -7 x#4#9 -6 x#4#8 -5 x#4#7 -4 x#4#6 -3 x#4#5
  -2 x#4#4 - x#4#3 + x#4#1 +10 x#0#10 +9 x#0#9 +8 x#0#8
  +7 x#0#7 +6 x#0#6 +5 x#0#5 +4 x#0#4 +3 x#0#3 +2 x#0#2
  + x#0#1 <= 0
 precedence_3:
  -9 x#2#10 -8 x#2#9 -7 x#2#8 -6 x#2#7 -5 x#2#6 -4 x#2#5
  -3 x#2#4 -2 x#2#3 - x#2#2 +10 x#1#10 +9 x#1#9 +8 x#1#8
  +7 x#1#7 +6 x#1#6 +5 x#1#5 +4 x#1#4 +3 x#1#3 +2 x#1#2
  + x#1#1 <= 0
 precedence_4:
  -8 x#3#10 -7 x#3#9 -6 x#3#8 -5 x#3#7 -4 x#3#6 -3 x#3#5
  -2 x#3#4 - x#3#3 + x#3#1 +10 x#2#10 +9 x#2#9 +8 x#2#8
  +7 x#2#7 +6 x#2#6 +5 x#2#5 +4 x#2#4 +3 x#2#3 +2 x#2#2
  + x#2#1 <= 0
 precedence_5:
  -9 x#5#10 -8 x#5#9 -7 x#5#8 -6 x#5#7 -5 x#5#6 -4 x#5#5
  -3 x#5#4 -2 x#5#3 - x#5#2 +10 x#4#10 +9 x#4#9 +8 x#4#8
  +7 x#4#7 +6 x#4#6 +5 x#4#5 +4 x#4#4 +3 x#4#3 +2 x#4#2
  + x#4#1 <= 0
 precedence_6:
  -10 x#6#10 -9 x#6#9 -8 x#6#8 -7 x#6#7 -6 x#6#6 -5 x#6#5
  -4 x#6#4 -3 x#6#3 -2 x#6#2 - x#6#1 +10 x#5#10 +9 x#5#9
  +8 x#5#8 +7 x#5#7 +6 x#5#6 +5 x#5#5 +4 x#5#4 +3 x#5#3
  +2 x#5#2 + x#5#1 <= 0
 precedence_7:
  -10 x#6#10 -9 x#6#9 -8 x#6#8 -7 x#6#7 -6 x#6#6 -5 x#6#5
  -4 x#6#4 -3 x#6#3 -2 x#6#2 - x#6#1 +10 x#3#10 +9 x#3#9
  +8 x#3#8 +7 x#3#7 +6 x#3#6 +5 x#3#5 +4 x#3#4 +3 x#3#3
  +2 x#3#2 + x#3#1 <= 0
 rescapacity_1:
  - z#1#1 +2 x#5#1 + x#4#2 + x#4#1 + x#3#2 + x#3#1
  +2 x#2#1 + x#1#1 <= 0
 rescapacity_2:
  - z#1#2 +2 x#5#2 + x#4#3 + x#4#2 + x#3#3 + x#3#2
  +2 x#2#2 + x#1#2 <= 0
 rescapacity_3:
  - z#1#3 +2 x#5#3 + x#4#4 + x#4#3 + x#3#4 + x#3#3
  +2 x#2#3 + x#1#3 <= 0
 rescapacity_4:
  - z#1#4 +2 x#5#4 + x#4#5 + x#4#4 + x#3#5 + x#3#4
  +2 x#2#4 + x#1#4 <= 0
 rescapacity_5:
  - z#1#5 +2 x#5#5 + x#4#6 + x#4#5 + x#3#6 + x#3#5
  +2 x#2#5 + x#1#5 <= 0
 rescapacity_6:
  - z#1#6 +2 x#5#6 + x#4#7 + x#4#6 + x#3#7 + x#3#6
  +2 x#2#6 + x#1#6 <= 0
 rescapacity_7:
  - z#1#7 +2 x#5#7 + x#4#8 + x#4#7 + x#3#8 + x#3#7
  +2 x#2#7 + x#1#7 <= 0
 rescapacity_8:
  - z#1#8 +2 x#5#8 + x#4#9 + x#4#8 + x#3#9 + x#3#8
  +2 x#2#8 + x#1#8 <= 0
 rescapacity_9:
  - z#1#9 +2 x#5#9 + x#4#10 + x#4#9 + x#3#10 + x#3#9
  +2 x#2#9 + x#1#9 <= 0
 rescapacity_10:
  - z#1#10 +2 x#5#10 + x#4#10 + x#3#10 +2 x#2#10 + x#1#10
  <= 0
 overtimecapac@19:
  + z#1#1 <= 10
 overtimecapac@1a:
  + z#1#2 <= 10
 overtimecapac@1b:
  + z#1#3 <= 10
 overtimecapac@1c:
  + z#1#4 <= 10
 overtimecapac@1d:
  + z#1#5 <= 10
 overtimecapac@1e:
  + z#1#6 <= 10
 overtimecapac@1f:
  + z#1#7 <= 10
 overtimecapac@20:
  + z#1#8 <= 10
 overtimecapac@21:
  + z#1#9 <= 10
 overtimecapac@22:
  + z#1#10 <= 10
Bounds
 0 <= x#0#1 <= 1
 0 <= x#0#2 <= 1
 0 <= x#0#3 <= 1
 0 <= x#0#4 <= 1
 0 <= x#0#5 <= 1
 0 <= x#0#6 <= 1
 0 <= x#0#7 <= 1
 0 <= x#0#8 <= 1
 0 <= x#0#9 <= 1
 0 <= x#0#10 <= 1
 0 <= x#1#1 <= 1
 0 <= x#1#2 <= 1
 0 <= x#1#3 <= 1
 0 <= x#1#4 <= 1
 0 <= x#1#5 <= 1
 0 <= x#1#6 <= 1
 0 <= x#1#7 <= 1
 0 <= x#1#8 <= 1
 0 <= x#1#9 <= 1
 0 <= x#1#10 <= 1
 0 <= x#2#1 <= 1
 0 <= x#2#2 <= 1
 0 <= x#2#3 <= 1
 0 <= x#2#4 <= 1
 0 <= x#2#5 <= 1
 0 <= x#2#6 <= 1
 0 <= x#2#7 <= 1
 0 <= x#2#8 <= 1
 0 <= x#2#9 <= 1
 0 <= x#2#10 <= 1
 0 <= x#3#1 <= 1
 0 <= x#3#2 <= 1
 0 <= x#3#3 <= 1
 0 <= x#3#4 <= 1
 0 <= x#3#5 <= 1
 0 <= x#3#6 <= 1
 0 <= x#3#7 <= 1
 0 <= x#3#8 <= 1
 0 <= x#3#9 <= 1
 0 <= x#3#10 <= 1
 0 <= x#4#1 <= 1
 0 <= x#4#2 <= 1
 0 <= x#4#3 <= 1
 0 <= x#4#4 <= 1
 0 <= x#4#5 <= 1
 0 <= x#4#6 <= 1
 0 <= x#4#7 <= 1
 0 <= x#4#8 <= 1
 0 <= x#4#9 <= 1
 0 <= x#4#10 <= 1
 0 <= x#5#1 <= 1
 0 <= x#5#2 <= 1
 0 <= x#5#3 <= 1
 0 <= x#5#4 <= 1
 0 <= x#5#5 <= 1
 0 <= x#5#6 <= 1
 0 <= x#5#7 <= 1
 0 <= x#5#8 <= 1
 0 <= x#5#9 <= 1
 0 <= x#5#10 <= 1
 0 <= x#6#1 <= 1
 0 <= x#6#2 <= 1
 0 <= x#6#3 <= 1
 0 <= x#6#4 <= 1
 0 <= x#6#5 <= 1
 0 <= x#6#6 <= 1
 0 <= x#6#7 <= 1
 0 <= x#6#8 <= 1
 0 <= x#6#9 <= 1
 0 <= x#6#10 <= 1
 0 <= z#1#1 <= +inf
 0 <= z#1#2 <= +inf
 0 <= z#1#3 <= +inf
 0 <= z#1#4 <= +inf
 0 <= z#1#5 <= +inf
 0 <= z#1#6 <= +inf
 0 <= z#1#7 <= +inf
 0 <= z#1#8 <= +inf
 0 <= z#1#9 <= +inf
 0 <= z#1#10 <= +inf
 0 <= makespan <= +inf
General
 x#0#1
 x#0#2
 x#0#3
 x#0#4
 x#0#5
 x#0#6
 x#0#7
 x#0#8
 x#0#9
 x#0#10
 x#1#1
 x#1#2
 x#1#3
 x#1#4
 x#1#5
 x#1#6
 x#1#7
 x#1#8
 x#1#9
 x#1#10
 x#2#1
 x#2#2
 x#2#3
 x#2#4
 x#2#5
 x#2#6
 x#2#7
 x#2#8
 x#2#9
 x#2#10
 x#3#1
 x#3#2
 x#3#3
 x#3#4
 x#3#5
 x#3#6
 x#3#7
 x#3#8
 x#3#9
 x#3#10
 x#4#1
 x#4#2
 x#4#3
 x#4#4
 x#4#5
 x#4#6
 x#4#7
 x#4#8
 x#4#9
 x#4#10
 x#5#1
 x#5#2
 x#5#3
 x#5#4
 x#5#5
 x#5#6
 x#5#7
 x#5#8
 x#5#9
 x#5#10
 x#6#1
 x#6#2
 x#6#3
 x#6#4
 x#6#5
 x#6#6
 x#6#7
 x#6#8
 x#6#9
 x#6#10
 z#1#1
 z#1#2
 z#1#3
 z#1#4
 z#1#5
 z#1#6
 z#1#7
 z#1#8
 z#1#9
 z#1#10
 makespan
End
